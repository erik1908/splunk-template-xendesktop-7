###############################
#
# Alert Searches
#
###############################

# CPU
###############################
[Alert - CPU Warning]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 3
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Processor" instance="_Total" | stats avg(%_Processor_Time) AS Value by host SiteName | where Value > `CPU-Warning` | eval AlertName = "CPU Warning" | eval Severity="Warning" | eval Details = "Average CPU value has been in a warning state for 15 minutes or more." | collect `xd_alert_index`

[Alert - CPU Critical]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Processor" instance="_Total" | stats avg(%_Processor_Time) AS Value by host SiteName | where Value > `CPU-Critical` | eval AlertName = "CPU Critical" | eval Severity="Critical" | eval Details = "Average CPU value has been in a critical state for 15 minutes or more." | collect `xd_alert_index`

# Available Memory
###############################
[Alert - Avail Mem Warning]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 3
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Memory" | lookup winHosts host OUTPUT TotalPhysicalMemoryKB | eval Available_KB = (Available_Bytes / 1024) | eval pctFreeMem = ((Available_KB / TotalPhysicalMemoryKB) * 100) | stats avg(pctFreeMem) AS Value by host SiteName | where Value < `Mem-Warning` | eval Value = round(Value, 2) | eval AlertName = "Memory Warning" | eval Severity="Warning" | eval Details = "Average available memory value has been in a warning state for 15 minutes or more." | collect `xd_alert_index`

[Alert - Avail Mem Critical]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Memory" | lookup winHosts host OUTPUT TotalPhysicalMemoryKB | eval Available_KB = (Available_Bytes / 1024) | eval pctFreeMem = ((Available_KB / TotalPhysicalMemoryKB) * 100) | stats avg(pctFreeMem) AS Value by host SiteName | where Value < `Mem-Critical` | eval Value = round(Value, 2) | eval AlertName = "Memory Critical" | eval Severity="Critical" | eval Details = "Average available memory value has been in a critical state for 15 minutes or more." | collect `xd_alert_index`

# Pages/sec
###############################
[Alert - Pages per sec Warning]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 3
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Memory" | stats avg(Pages/sec) AS Value by host SiteName | where Value > `Pages-sec-Warning` | eval AlertName = "Pages/sec Warning" | eval Severity="Warning" | eval Details = "Average memory pages/sec value has been in a warning state for 15 minutes or more." | collect `xd_alert_index`

[Alert - Pages per sec Critical]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:Memory" | stats avg(Pages/sec) AS Value by host SiteName | where Value > `Pages-sec-Critical` | eval AlertName = "Pages/sec Critical" | eval Severity="Critical" | eval Details = "Average memory pages/sec value has been in a critical state for 15 minutes or more." | collect `xd_alert_index`

# Pagefile % Usage
###############################
[Alert - Pagefile Warning]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 3
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:PageFile" | stats avg(%_Usage) AS Value by host SiteName | where Value > `Pagefile-Warning` | eval AlertName = "Pagefile % Usage Warning" | eval Severity="Warning" | eval Details = "Average pagefile % usage value has been in a warning state for 15 minutes or more." | collect `xd_alert_index`

[Alert - Pagefile Critical]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:PageFile" | stats avg(%_Usage) AS Value by host SiteName | where Value > `Pagefile-Critical` | eval AlertName = "Pagefile % Usage Critical" | eval Severity="Critical" | eval Details = "Average pagefile % usage value has been in a critical state for 15 minutes or more." | collect `xd_alert_index`

# Disk % Free
###############################
[Alert - Disk pct Free Warning]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 3
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:LogicalDisk" instance!="_Total" | stats avg(%_Free_Space) AS Value by instance host SiteName | where Value < `Disk_pct_Free-Warning` | eval AlertName = "Disk % Free Warning" | eval Severity="Warning" | eval Details = "Average free disk space value has been in a warning state for 15 minutes or more." | collect `xd_alert_index`

[Alert - Disk pct Free Critical]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_perfmon_index` sourcetype="PerfmonMk:LogicalDisk" instance!="_Total" | stats avg(%_Free_Space) AS Value by instance host SiteName | where Value < `Disk_pct_Free-Critical`` | eval AlertName = "Disk % Free Critical" | eval Severity="Critical" | eval Details = "Average free disk space value has been in a critical state for 15 minutes or more." | collect `xd_alert_index`

# Citrix AD Identity Servcie
###############################
[Alert - Health - ADIdentity]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-ADIdentity` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "AD Identity Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix ADIdentity service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix Broker Servcie
###############################
[Alert - Health - Broker]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-Broker` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "Broker Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix Broker service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix Config Servcie
###############################
[Alert - Health - Config]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-Config` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "Config Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix Config service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix CDF Servcie
###############################
[Alert - Health - CDF]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-CDF` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "CDF Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix CDF service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix Host Servcie
###############################
[Alert - Health - Host]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-Host` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "Citrix Host Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix Host service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix MCS Servcie
###############################
[Alert - Health - MCS]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-MCS` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "MCS Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix MCS service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix VDA Servcie
###############################
[Alert - Health - VDA]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-VDA` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "VDA Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix VDA service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix CSE Servcie
###############################
[Alert - Health - CSE]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-CSE` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "CSE Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix CSE service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix UPM Servcie
###############################
[Alert - Health - UPM]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-UPM` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "UPM Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix UPM service or one of its dependencies is not running." | collect `xd_alert_index`

# Citrix CSM Servcie
###############################
[Alert - Health - CSM]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-CSM` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "CSM Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The Citrix CSM service or one of its dependencies is not running." | collect `xd_alert_index`

# RDS Servcie
###############################
[Alert - Health - RDS]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = `xd_index` sourcetype="WMI:Services" `Services-RDS` | stats latest(State) AS State by DisplayName host SiteName | where State != "Running" | eval AlertName = "RDS Service Critical" | eval Severity="Critical" | eval Value = State | eval Details = "The RDS service or one of its dependencies is not running." | collect `xd_alert_index`

# Machine Offline
###############################
[Alert - Host Offline]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
alert.severity = 5
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = -18m
dispatch.latest_time = -3m
enableSched = 1
search = | metadata type=hosts `xd_perfmon_index` | where lastTime<now()-900 | lookup siteHosts MachineName AS host OUTPUTNEW SiteName AS SiteName | convert ctime(recentTime) AS recentTime | eval AlertName = "Machine Offline" | eval Severity="Critical" | eval Details = "The last check-in for machine ".host." was ".recentTime | eval Value = recentTime | collect `xd_alert_index`

###############################
#
# Lookup builders
#
###############################
[Lookup - Host to Site]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
run_on_startup = true
search = `xd_index` (sourcetype=xendesktop:*:machine OR sourcetype=xendesktop:*:controller) | stats count by MachineName SiteName | inputlookup lookup_host_site_staging.csv append=t | stats count by MachineName SiteName | table MachineName SiteName | outputlookup lookup_host_site_staging.csv | append [ | updatehostsitelookup ]

[Lookup - Published Applications]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -4h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
run_on_startup = true
search = `xd_index` sourcetype=xendesktop:*:application | inputlookup lookup_pubapp.csv append=t | stats count by SiteName BrowserName PublishedName ApplicationType Enabled  | eval Status=if(lower(Enabled)=="true", "Enabled", "Disabled") | table SiteName BrowserName PublishedName ApplicationType Enabled Status | outputlookup lookup_pubapp.csv

[Lookup - Calendar - Users by Day]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
run_on_startup = true
search = `xd_index` sourcetype="xenapp:*:session" | bucket _time span=1d | stats dc(UserName) AS Users by _time | convert timeformat="%m/%d/%Y" ctime(_time) AS date | stats count by date,Users | inputlookup calendar_users.csv append=t | stats max(Users) AS Users by date | table date Users | outputlookup calendar_users.csv

[Lookup - WinHosts]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
description = Updates the winHosts.csv lookup file
dispatch.earliest_time = -26h@h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `xd_index` sourcetype=WinHostMon | stats latest(_time) AS _time latest(OS) AS OS latest(Architecture) AS Architecture latest(Version) AS Version latest(BuildNumber) AS BuildNumber latest(ServicePack) AS ServicePack latest(LastBootUpTime) AS LastBootUpTime latest(TotalPhysicalMemoryKB) AS TotalPhysicalMemoryKB latest(TotalVirtualMemoryKB) as TotalVirtualMemoryKB latest(NumberOfCores) AS NumberOfCores by host | inputlookup append=T winHosts.csv | sort _time | stats latest(_time) AS _time latest(OS) AS OS latest(Architecture) AS Architecture latest(Version) AS Version latest(BuildNumber) AS BuildNumber latest(ServicePack) AS ServicePack latest(LastBootUpTime) AS LastBootUpTime latest(TotalPhysicalMemoryKB) AS TotalPhysicalMemoryKB latest(TotalVirtualMemoryKB) as TotalVirtualMemoryKB latest(NumberOfCores) AS NumberOfCores by host | outputlookup winHosts.csv

[Lookup - Sites]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
description = Updates the lookup_sites.csv lookup file
dispatch.earliest_time = -26h@h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `xd_index` sourcetype="xendesktop:*:site" | stats latest(_time) AS _time latest(Machines) AS Machines latest(Applications) AS Applications latest(Controllers) AS Controllers BY Name | inputlookup append=t lookup_sites.csv | sort _time | stats latest(_time) AS _time latest(Machines) AS Machines latest(Applications) AS Applications latest(Controllers) AS Controllers BY Name | outputlookup lookup_sites.csv